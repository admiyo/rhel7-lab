---
- Name: Set Facts
  set_fact:
    vm_hostnames: []
    vm_ips: []

- include_tasks: "manageiq_hostnames.yml"
  when: manageiq is defined

- include_tasks: "build_hostnames.yml"
  when: manageiq is not defined

- include_tasks: "ocp_hostnames.yml"
  when: host_dns_id is defined

- debug: var=vm_hostnames
  verbosity: 2

- name: Set IP Addresses
  set_fact:
    vm_ips: "{{ vm_ips }} + ['{{ lookup('dig', '{{ item }}') }}']"
  with_items: "{{ vm_hostnames }}"

- debug: var=vm_ips
  verbosity: 2

- name: Delete VMs
  ovirt_vms:
    auth:
      username: "{{ rhv_username }}"
      password: "{{ rhv_password }}"
      url: "https://{{ rhv_hostname }}/ovirt-engine/api"
      insecure: true
    state: absent
    name: "{{ item }}"
  with_items: "{{ vm_hostnames }}"

- name: Generate phpipam Token
  uri:
    url: "http://{{ php_ipam_hostname }}/api/{{ php_ipam_api_user }}/user/"
    method: POST
    user: "{{ php_ipam_username }}"
    password: "{{ php_ipam_password }}"
    force_basic_auth: true
    status_code: 200
  register: session

- debug: var=session.json.data.token
  verbosity: 2

- name: Free IPs
  uri:
    url: "http://{{ php_ipam_hostname }}/api/demolab/addresses/{{ item }}/{{ php_ipam_subnet_id }}/"
    method: DELETE
    headers:
      phpipam-token: "{{ session.json.data.token }}"
    status_code: 200
  register: delete_ip
  with_items: "{{ vm_ips }}"

- name: Generate IPA Session Cookie
  uri:
    url: "https://{{ ipa_hostname }}/ipa/session/login_password"
    validate_certs: no
    method: POST
    status_code: 200
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      Accept: "text/plain"
      Referer: "https://{{ ipa_hostname }}/ipa"
    body: "user={{ ipa_username }}&password={{ ipa_password }}"
  register: session

- debug: var=session
  verbosity: 2

- name: Delete Host from IPA
  uri:
    url: "https://{{ ipa_hostname }}/ipa/session/json"
    validate_certs: no
    method: POST
    status_code: 200
    headers:
      Cookie: "{{ session.set_cookie }}"
      Accept: "application/json"
      Referer: "https://{{ ipa_hostname }}/ipa"
    body:
      method: host_del
      params:
      - - "{{ item }}"
      - updatedns: true
    body_format: json
  register: host_del
  with_items: "{{ vm_hostnames }}"

- name: Delete DNS Zone from IPA
  uri:
    url: "https://{{ ipa_hostname }}/ipa/session/json"
    validate_certs: no
    method: POST
    status_code: 200
    headers:
      Cookie: "{{ session.set_cookie }}"
      Accept: "application/json"
      Referer: "https://{{ ipa_hostname }}/ipa"
    body:
      method: dnszone_del
      params:
      - - "{{ host_dns_id }}.{{ host_dns_suffix }}"
      - {}
    body_format: json
  register: zone_del
  when: "host_dns_id is defined"

- name: Delete Hosts from Satellite
  uri:
    url: "https://{{ satellite_hostname }}/api/hosts/{{ item }}"
    method: DELETE
    user: "{{ satellite_username }}"
    password: "{{ satellite_password }}"
    validate_certs: no
    force_basic_auth: yes
    code: 200
  with_items:
    - "{{ vm_hostnames }}"
