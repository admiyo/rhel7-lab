---
- name: Generate Host OTP
  shell: /usr/bin/openssl rand -hex 10
  register: ipa_otp

- set_fact:
    ipa_otp: "{{ ipa_otp.stdout }}"

- debug: var=ipa_otp
  verbosity: 2

- name: Generate IPA Session Cookie
  uri:
    url: "https://{{ ipa_hostname }}/ipa/session/login_password"
    validate_certs: no
    method: POST
    status_code: 200
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      Accept: "text/plain"
      Referer: "https://{{ ipa_hostname }}/ipa"
    body: "user={{ ipa_username }}&password={{ ipa_password }}"
  register: session

- debug: var=session
  verbosity: 2

- name: Create Host in IPA
  uri:
    url: "https://{{ ipa_hostname }}/ipa/session/json"
    validate_certs: no
    method: POST
    status_code: 200
    headers:
      Cookie: "{{ session.set_cookie }}"
      Accept: "application/json"
      Referer: "https://{{ ipa_hostname }}/ipa"
    body:
      method: host_add
      params:
      - - "{{ item.0 }}."
      - ip_address: "{{ item.1 }}"
    body_format: json
  register: host_add
  with_together:
    - "{{ hostnames }}"
    - "{{ ip_addresses }}"
  failed_when: "host_add.json.error is not none"

- debug: var=host_add
  verbosity: 2

- name: Assign OTP to Host
  uri:
    url: "https://{{ ipa_hostname }}/ipa/session/json"
    validate_certs: no
    method: POST
    status_code: 200
    headers:
      Cookie: "{{ session.set_cookie }}"
      Accept: "application/json"
      Referer: "https://{{ ipa_hostname }}/ipa"
    body:
      method: host_mod
      params:
      - - "{{ item }}"
      - userpassword: "{{ ipa_otp }}"
    body_format: json
  register: host_mod
  with_items: "{{ hostnames }}"
  failed_when: "host_mod.json.error is not none"

- debug: var=host_mod.results
  verbosity: 2
